// <auto-generated />
using System;
using Infrastructure.DataAccess.Repositories.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(IssueTrackerContext))]
    [Migration("20220507141213_SeedSprints")]
    partial class SeedSprints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Issue", b =>
                {
                    b.Property<Guid>("IssueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<Guid?>("SprintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssueId");

                    b.HasIndex("SprintId");

                    b.ToTable("Issue", (string)null);

                    b.HasData(
                        new
                        {
                            IssueId = new Guid("31ed9c62-c367-42ed-aa63-2e68e4934890"),
                            Description = "description1",
                            Points = 1,
                            Status = "NotStarted",
                            Title = "issue1"
                        },
                        new
                        {
                            IssueId = new Guid("035fecc7-5bcc-4c9e-b7d8-34113e722298"),
                            AssignedTo = new Guid("9925232a-7eb8-46bd-a1e9-597e06b36069"),
                            Description = "description2",
                            Points = 2,
                            SprintId = new Guid("76245a54-2a26-4de9-92ab-1ddbbccb6591"),
                            Status = "NotStarted",
                            Title = "issue2"
                        },
                        new
                        {
                            IssueId = new Guid("d5bf8c94-f7f3-4aaa-85fc-b02efd4a6d89"),
                            AssignedTo = new Guid("9925232a-7eb8-46bd-a1e9-597e06b36069"),
                            Description = "description3",
                            Points = 4,
                            SprintId = new Guid("76245a54-2a26-4de9-92ab-1ddbbccb6591"),
                            Status = "NotStarted",
                            Title = "issue3"
                        });
                });

            modelBuilder.Entity("Domain.Sprint", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sprint", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("76245a54-2a26-4de9-92ab-1ddbbccb6591"),
                            EndDate = new DateTime(2022, 5, 21, 14, 12, 12, 650, DateTimeKind.Utc).AddTicks(9001),
                            StartDate = new DateTime(2022, 5, 7, 14, 12, 12, 650, DateTimeKind.Utc).AddTicks(7562)
                        });
                });

            modelBuilder.Entity("Domain.Issue", b =>
                {
                    b.HasOne("Domain.Sprint", "Sprint")
                        .WithMany("Issues")
                        .HasForeignKey("SprintId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Sprint");
                });

            modelBuilder.Entity("Domain.Sprint", b =>
                {
                    b.Navigation("Issues");
                });
#pragma warning restore 612, 618
        }
    }
}
